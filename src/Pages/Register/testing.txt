WE NEED FORM FOR LOGIN AND REGISTER and ANY API POST

function Register() {
  const [email, setEmail] = useState("");
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");

    try {
      const response = await fetch("http://localhost:5000/api/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, username, password }),
      });

      if (!response.ok) {
        const data = await response.json();
        throw new Error(data.error || "Registration failed");
      }

      // Redirect to application submitted page
      navigate("/app-submitted");
    } catch (err) {
      setError(err.message);
    }
  };

  return (
    <div className="register-container">
      <div className="register-header">
        <Link to="/">
          <img src="logo.png" alt="Logo" className="register-logo" />
        </Link>
      </div>
      <div className="register-title">Apply to become a user</div>
      {error && <p className="error">{error}</p>}
      <div className="register-form-container">
        <form className="register-form" onSubmit={handleSubmit}>
          <input
            type="email"
            placeholder="Enter email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
          <input
            type="text"
            placeholder="Set username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            required
          />
          <input
            type="password"
            placeholder="Set password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
          <div className="register-submit-container">
            <button type="submit" className="register-submit-button">
              Apply
            </button>
          </div>
        </form>
      </div>
      <div className="register-login-redirect">
        Already registered with us?&nbsp;
        <Link to="/login">Login</Link>.
      </div>
    </div>
  );
}

export default Register;

import React, { useEffect, useState } from "react";

function AccountApproval() {
  const [pendingUsers, setPendingUsers] = useState([]);

  useEffect(() => {
    fetch("http://localhost:5000/api/pending-approvals")
      .then((response) => response.json())
      .then((data) => setPendingUsers(data))
      .catch((error) => console.error("Error fetching pending approvals:", error));
  }, []);

  const handleAction = (id, action) => {
    fetch("http://localhost:5000/api/approve", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id, action }),
    })
      .then(() => {
        setPendingUsers((prev) => prev.filter((user) => user.id !== id));
      })
      .catch((error) => console.error(`Error ${action}ing user:`, error));
  };

  return (
    <div>
      <h1>Account Approvals</h1>
      <div className="approvals-container">
        {pendingUsers.map((user) => (
          <div key={user.id} className="approval-card">
            <p>Email: {user.email}</p>
            <p>Username: {user.username}</p>
            <button onClick={() => handleAction(user.id, "approve")}>Approve</button>
            <button onClick={() => handleAction(user.id, "reject")}>Reject</button>
          </div>
        ))}
      </div>
    </div>
  );
}

export default AccountApproval;